services:
  # Plant Disease Detection AI Service
  plant-disease-ai:
    build: 
      context: ./predict_disease_model  # Cùng cấp với docker-compose.yml
      dockerfile: Dockerfile
    restart: always
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - TFLITE_PATH=${TFLITE_PATH}
      - FLASK_HOST=${FLASK_HOST}
      - FLASK_PORT=${PLANT_AI_PORT}
      - FLASK_DEBUG=${FLASK_DEBUG}
    volumes:
      - ./predict_disease_model/static:/app/static:ro
      - ./predict_disease_model/templates:/app/templates:ro
      - ai_disease_logs:/app/logs
    expose:
      - "${PLANT_AI_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PLANT_AI_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - app=plant-disease-ai
      - service=ai-model
    networks:
      - smart-garden-network

  # Smart Watering System AI Service  
  smart-watering-ai:
    build: 
      context: ./watering_model  # Sử dụng watering_model thay vì smart_watering_model
      dockerfile: Dockerfile
    restart: always
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PORT=${WATERING_AI_PORT}
      - HOST=${FLASK_HOST}
      - DEBUG=${FLASK_DEBUG}
    volumes:
      - ./watering_model:/app:ro  # Mount toàn bộ watering_model
      - ai_watering_logs:/app/logs
    expose:
      - "${WATERING_AI_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${WATERING_AI_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - app=smart-watering-ai
      - service=ai-model
    networks:
      - smart-garden-network

  # Main NestJS Server
  smart-garden-server:
    build: 
      context: .  # Thư mục hiện tại (smart_garden_server/)
      dockerfile: Dockerfile
    restart: always
    depends_on:
      plant-disease-ai:
        condition: service_healthy
      smart-watering-ai:
        condition: service_healthy
    ports:
      - '${EXTERNAL_PORT}:${PORT}'
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PLANT_DISEASE_AI_URL=http://plant-disease-ai:${PLANT_AI_PORT}
      - SMART_WATERING_AI_URL=http://smart-watering-ai:${WATERING_AI_PORT}
      - AI_SERVICE_ENABLED=${AI_SERVICE_ENABLED}
      - PLANT_DISEASE_DETECTION_ENABLED=${PLANT_DISEASE_DETECTION_ENABLED}
      - SMART_WATERING_ENABLED=${SMART_WATERING_ENABLED}
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRES_IN=${JWT_ACCESS_TOKEN_EXPIRES_IN}
      - JWT_REFRESH_TOKEN_EXPIRES_IN=${JWT_REFRESH_TOKEN_EXPIRES_IN}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
    volumes:
      - app_logs:/usr/src/app/logs
      - ./pictures:/usr/src/app/pictures  # Mount pictures folder
    labels:
      - app=smart-garden-server
      - service=main-api
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT}/v1/health/liveness || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - smart-garden-network

volumes:
  ai_disease_logs:
    driver: local
  ai_watering_logs:
    driver: local
  app_logs:
    driver: local

networks:
  smart-garden-network:
    driver: bridge
    labels:
      - project=smart-garden