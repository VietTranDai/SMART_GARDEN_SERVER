version: '3.8'

services:
  # Plant Disease Detection AI Service
  plant-disease-ai:
    build: 
      context: ./predict_disease_model
      dockerfile: Dockerfile
    restart: always
    environment:
      - FLASK_ENV=production
      - TFLITE_PATH=/app/InceptionResNetV2_improved.tflite
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
    volumes:
      - ./predict_disease_model/model:/app/model:ro  # Mount model directory if separate
      - ai_logs:/app/logs                            # Persistent logs
    # No external ports - internal service only
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - app=plant-disease-ai
    networks:
      - smart-garden-network

  smart-garden-server:
    build: .
    restart: always
    depends_on:
      # Chỉ phụ thuộc vào AI service vì database đã online
      plant-disease-ai:
        condition: service_healthy
    ports:
      - '3456:3000'
    environment:
      # Sử dụng database online
      DATABASE_URL: "postgresql://avnadmin:AVNS_sATWAKCDBSQXKCkvsnN@pg-39c47927-trandaiviet.e.aivencloud.com:19306/defaultdb?sslmode=require"
      # AI Service URL for internal communication
      AI_SERVICE_URL: http://plant-disease-ai:5000
      AI_SERVICE_ENABLED: "true"
    labels:
      - app=smart-garden-server
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -f http://localhost:3000/v1/health/liveness || exit 1',
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - smart-garden-network

volumes:
  # Chỉ giữ lại volume cho AI logs, xóa pgdata vì không cần nữa
  ai_logs:

networks:
  smart-garden-network:
    driver: bridge