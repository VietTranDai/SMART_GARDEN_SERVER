version: '3.8'

services:
  # Plant Disease Detection AI Service
  plant-disease-ai:
    build: 
      context: ./predict_disease_model
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION=3.9
    image: smart-garden/plant-disease-ai:latest
    container_name: plant-disease-ai
    restart: unless-stopped
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - TFLITE_PATH=${TFLITE_PATH:-./InceptionResNetV2_improved.tflite}
      - FLASK_HOST=${FLASK_HOST:-0.0.0.0}
      - FLASK_PORT=${PLANT_AI_PORT:-5000}
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - ./predict_disease_model/static:/app/static:ro
      - ./predict_disease_model/templates:/app/templates:ro
      - ai_disease_uploads:/app/uploads
      - ai_disease_logs:/app/logs
    expose:
      - "${PLANT_AI_PORT:-5000}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PLANT_AI_PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
    labels:
      - "app=plant-disease-ai"
      - "service=ai-model"
      - "maintainer=VietTranDai"
      - "version=1.0.0"
    networks:
      - smart-garden-network

  # Smart Watering System AI Service  
  smart-watering-ai:
    build: 
      context: ./watering_model
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION=3.11
    image: smart-garden/smart-watering-ai:latest
    container_name: smart-watering-ai
    restart: unless-stopped
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PORT=${WATERING_AI_PORT:-5001}
      - HOST=${FLASK_HOST:-0.0.0.0}
      - DEBUG=${FLASK_DEBUG:-false}
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - ./watering_model/models:/app/models:ro
      - ./watering_model/static:/app/static:ro
      - ./watering_model/templates:/app/templates:ro
      - ai_watering_data:/app/data
      - ai_watering_logs:/app/logs
    expose:
      - "${WATERING_AI_PORT:-5001}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${WATERING_AI_PORT:-5001}/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
        reservations:
          memory: 256M
    labels:
      - "app=smart-watering-ai"
      - "service=ai-model"
      - "maintainer=VietTranDai"
      - "version=1.0.0"
    networks:
      - smart-garden-network

  # Main NestJS Server
  smart-garden-server:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - NODE_VERSION=22
    image: smart-garden/server:latest
    container_name: smart-garden-server
    restart: unless-stopped
    depends_on:
      plant-disease-ai:
        condition: service_healthy
      smart-watering-ai:
        condition: service_healthy
    ports:
      - '${EXTERNAL_PORT:-3000}:${PORT:-3000}'
    environment:
      # Database
      - DATABASE_URL=${DATABASE_URL}
      
      # AI Services
      - AI_DISEASE_PREDICT=http://plant-disease-ai:${PLANT_AI_PORT:-5000}
      - PLANT_DISEASE_AI_URL=http://plant-disease-ai:${PLANT_AI_PORT:-5000}
      - SMART_WATERING_AI_URL=http://smart-watering-ai:${WATERING_AI_PORT:-5001}
      - AI_SERVICE_ENABLED=${AI_SERVICE_ENABLED:-true}
      - PLANT_DISEASE_DETECTION_ENABLED=${PLANT_DISEASE_DETECTION_ENABLED:-true}
      - SMART_WATERING_ENABLED=${SMART_WATERING_ENABLED:-true}
      
      # Application
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - TZ=Asia/Ho_Chi_Minh
      
      # JWT
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRES_IN=${JWT_ACCESS_TOKEN_EXPIRES_IN:-15m}
      - JWT_REFRESH_TOKEN_EXPIRES_IN=${JWT_REFRESH_TOKEN_EXPIRES_IN:-7d}
      
      # External APIs
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      
      # Swagger
      - SWAGGER_TITLE=${SWAGGER_TITLE:-Smart Garden API}
      - SWAGGER_DESCRIPTION=${SWAGGER_DESCRIPTION:-API documentation for Smart Garden Server}
      - SWAGGER_VERSION=${SWAGGER_VERSION:-1.0}
      - SWAGGER_TAG=${SWAGGER_TAG:-smart-garden}
    volumes:
      - ./pictures:/usr/src/app/pictures
      - app_logs:/usr/src/app/logs
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
    labels:
      - "app=smart-garden-server"
      - "service=main-api"
      - "maintainer=VietTranDai"
      - "version=1.0.0"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-3000}/v1/health/liveness"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - smart-garden-network

# Named volumes for persistent data
volumes:
  # AI Services
  ai_disease_uploads:
    driver: local
    labels:
      - "app=smart-garden"
      - "service=plant-disease-ai"
  ai_disease_logs:
    driver: local
  ai_watering_data:
    driver: local
    labels:
      - "app=smart-garden"
      - "service=smart-watering-ai"
  ai_watering_logs:
    driver: local
  
  # Main App
  app_logs:
    driver: local

# Network configuration
networks:
  smart-garden-network:
    driver: bridge
    labels:
      - "project=smart-garden"
      - "maintainer=VietTranDai"
      - "created=2025-06-02"
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1